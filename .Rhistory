gskTools::
gskTools::makeProject()
setwd("C:/Paul/Local_Projects/Other_Projects/Bioinformatics School/Raw_Data")
download.file("https://uclouvain-cbio.github.io/BSS2019/airway.zip", "airway.zip")
setwd("C:/Paul/Local_Projects/Other_Projects/Bioinformatics School/Code")
download.file("https://uclouvain-cbio.github.io/BSS2019/installation.R","installation.R")
## ----rversion, eval = TRUE-----------------------------------------------
message("* Checking R version.")
stopifnot(base::version$major == "3")
stopifnot(base::version$minor >= "6.0")
## ----biocmanagermsg, eval = TRUE-----------------------------------------
message("* Installing BiocManager.")
require("BiocManager")
## ----pkgs----------------------------------------------------------------
pkgs <- c("rjson", "shinydashboard", "shiny", "shinyjs",
"shinythemes", "shinyFiles", "openxlsx", "statOmics/MSqRob",
"iSEE", "SummarizedExperiment", "SingleCellExperiment",
"tximeta", "org.Hs.eg.db", "DESeq2", "edgeR", "pheatmap",
"rmdformats", "apeglm", "lme4", "tidyverse", "rmarkdown",
"Biobase", "DT", "fdrtool", "graphics", "grDevices",
"limma", "MASS", "Matrix", "methods", "MSnbase", "numDeriv",
"openxlsx", "plyr", "preprocessCore", "statmod",
"svDialogs", "utils", "vsn", "miniUI", "htmltools", "mzR",
"ProtGenerics", "BiocParallel", "snow", "httpuv", "xtable",
"htmlwidgets", "colorspace", "RColorBrewer", "dichromat",
"munsell", "labeling", "affyio", "zlibbioc", "doParallel",
"gtable", "scales", "tibble", "lazyeval", "reshape2",
"affy", "impute", "pcaMethods", "mzID", "MALDIquant",
"ggplot2", "XML", "minqa", "nloptr", "magrittr", "yaml",
"stringr", "stringi", "foreach", "iterators", "Rcpp",
"BiocGenerics", "BiocManager", "biomaRt", "Biostrings",
"BSgenome", "BSgenome.Hsapiens.UCSC.hg38",
"curatedTCGAData", "dplyr", "EnrichmentBrowser",
"GenomicAlignments", "GenomicFeatures", "GenomicRanges",
"ggplot2", "GO.db", "IRanges", "KEGGREST",
"MultiAssayExperiment", "org.Hs.eg.db", "rtracklayer",
"limma", "SingleCellExperiment", "SummarizedExperiment",
"tibble", "tidyr", "TxDb.Hsapiens.UCSC.hg38.knownGene")
pkgs <- sort(unique(pkgs))
pkgs
setdiff(pkgs, rownames(installed.packages()))
install.packages(MSqRob)
install.packages("MSqRob")
install.packages("statOmics/MSqRob")
BiocManager::install(statOmics/MSqRob, update = TRUE, ask = FALSE, upgrade = 'always')
## ----install, eval = TRUE------------------------------------------------
ip <- rownames(installed.packages())
pkgs_to_install <- pkgs[which(!sub("^.+/", "", pkgs) %in% ip)]
BiocManager::install(pkgs_to_install, update = TRUE, ask = FALSE, upgrade = 'always')
source("https://uclouvain-cbio.github.io/BSS2019/installation.R")
knitr::opts_chunk$set(
eval=as.logical(Sys.getenv("KNITR_EVAL", "TRUE")),
cache=as.logical(Sys.getenv("KNITR_CACHE", "TRUE"))
)
options(width = 75)
x <- c(1, 3, 5)
y <- 1:5
x <- c(TRUE, FALSE, NA)
outer(x, x, `&`)
outer(x, x, `|`)
x <- c("Male", "Female", "male")
gender <- factor(x, levels=c("Female", "Male"))
gender
x <- rnorm(100)
hist(x)
y <- x + rnorm(100)
df <- data.frame(x, y)
plot(y ~ x, df)
ridx <- df$x > 0
table(ridx)
plot(y ~ x, df[ridx, ])
fit <- lm(y ~ x, df)
class(fit)
anova(fit)
plot(y ~ x, df)
abline(fit)
library(ggplot2)
ggplot(df, aes(x, y)) +
geom_point() +
geom_smooth(method="lm")
library(readr)
pdata_file <-
system.file(package="BiocIntro", "extdata", "ALL-sample-sheet.csv")
pdata <- read_csv(pdata_file)
pdata_file <- file.choose()    # ALL-sample-sheet.csv
pdata_file <-
system.file(package="BiocIntro", "extdata", "ALL-sample-sheet.csv")
pdata <- read_csv(pdata_file)
library(dplyr)
pdata_file <-
system.file(package="BiocIntro", "extdata", "ALL-sample-sheet.csv")
pdata <- read_csv(pdata_file)
pdata %>% select(sample, sex, age, mol.biol)
install("BiocIntro")
install.packages("BiocIntro")
library(devtools)
devtools::install_github(Bioconductor/BiocIntro)
devtools::install_github(BiocIntro)
devtools::install_github("Bioconductor/BiocIntro")
pdata_file <-
system.file(package="BiocIntro", "extdata", "ALL-sample-sheet.csv")
pdata <- read_csv(pdata_file)
pdata_file <-  system.file(package="BiocIntro", "extdata", "ALL-sample-sheet.csv")
pdata_file
pdata_file <-  system.file(package="RIntro", "extdata", "ALL-sample-sheet.csv")
pdata_file <-  system.file(package="RIntro", "extdata", "ALL-sample-sheet.csv")
setwd("C:/Paul/Local_Projects/Other_Projects/Bioinformatics School/Code/BiocIntro-BSS2019")
devtools::install()
pdata_file <-  system.file(package="BiocIntro", "extdata", "ALL-sample-sheet.csv")
pdata <- read_csv(pdata_file)
pdata
pdata_file <-  system.file(package="BiocIntro", "extdata", "ALL-sample-sheet.csv")
pdata <- read_csv(pdata_file)
pdata
library(dplyr)
pdata %>% select(sample, sex, age, mol.biol)
pdata %>% filter(sex == "F", age < 50)
pdata %>% mutate(sex = factor(sex, levels = c("F", "M")))
pdata %>% summarize(
n = n(),
ave_age = mean(age, na.rm=TRUE)
)
pdata %>%
group_by(sex) %>%
summarize(
n = n(),
ave_age = mean(age, na.rm = TRUE)
)
pdata_file <-
system.file(package="BiocIntro", "extdata", "airway-sample-sheet.csv")
count_file <-
system.file(package="BiocIntro", "extdata", "airway-read-counts.csv")
pdata <- read_csv(pdata_file)
pdata <-
pdata %>%
select(Run, cell, dex)
counts <- read_csv(count_file)
eg <- counts[, 1:6]    # make it easy to work with
eg
data <- left_join(pdata, eg)
data
library(tidyr)
tbl <- gather(data, "Gene", "Count", -(1:3))
tbl
tbl %>%
group_by(Run) %>%
summarize(lib_size = sum(Count))
tbl %>%
group_by(Gene) %>%
summarize(
ave_count = mean(Count),
ave_log_count = mean(log(1 + Count))
)
counts_tbl <- gather(counts, "Gene", "Count", -Run)
data_tbl <- left_join(pdata, counts_tbl)
data_tbl
gene_summaries <-
data_tbl %>%
group_by(Gene) %>%
summarize(
ave_count = mean(Count),
ave_log_count = mean(log(1 + Count))
)
gene_summaries
library(ggplot2)
ggplot(gene_summaries, aes(ave_log_count)) +
geom_density()
library(Biostrings)
seq = c("AAACA", "CATGC")
dna <- DNAStringSet(seq)
reverseComplement(dna)
dm3_upstream_file <-
system.file(package="Biostrings", "extdata", "dm3_upstream2000.fa.gz")
readLines(dm3_upstream_file, 10)
dna <- readDNAStringSet(dm3_upstream_file)
dna
gc <- letterFrequency(dna, "GC", as.prob = TRUE)
hist(gc)
library(BSgenome)
library(BSgenome.Hsapiens.UCSC.hg38)
BSgenome.Hsapiens.UCSC.hg38
chr17 <- BSgenome.Hsapiens.UCSC.hg38[["chr17"]]
chr17
letterFrequency(chr17, "GC", as.prob=TRUE)
library(S4Vectors)
DataFrame(x = rnorm(100), y = rnorm(100))
length(dna)
dna[1:4]
nms = names(dna)
pos = sub(".* ", "", nms)
df <- DataFrame(
dna = unname(dna),
pos = pos
)
df$gc <- letterFrequency(df$dna, "GC", as.prob=TRUE)[,1]
df
library(BiocManager)
BiocManager::available("BSgenome.Hsapiens")
sessionInfo()
?rev
x= rnorm(100)
y= rnorm(100)
fit = lm(y~x)
fit
class(fit)
df = data.frame(x,y)
fit = lm(y~x, df)
View(eg)
methods (class = lm)
fit =<- lm(y~x, df)
fit <- lm(y~x, df)
knitr::opts_chunk$set(echo = TRUE)
methods(class = lm)
?plot.lm
?plot.lm
?plot.lm
library(ggplot2)
